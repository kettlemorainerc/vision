# This is an example of stitching four 90 degree x 90 degree standard perspective video feeds together into
# a full 360 degree view, then displaying it in a couple of ways. It gets away with sending six renderings
# to a view without masking by the somewhat contrived method of making them each exactly enough to render
# 1/6 of the pixels with zero overlap

video0	CeilingSource
video1	FloorSource
video2	NorthSource
video3	SouthSource
video4	EastSource
video5	WestSource


# fake camera feeds with gstreamer test patterns
CeilingSource.pipeline	videotestsrc pattern=ball motion=wavy background-color=4286611584 foreground-color=4294967295 ! video/x-raw,width=1024,height=1024 ! appsink
FloorSource.pipeline	videotestsrc pattern=smpte ! video/x-raw,width=1024,height=1024 ! appsink
NorthSource.pipeline	videotestsrc pattern=ball motion=sweep background-color=4294901760 foreground-color=4294967295 ! video/x-raw,width=1024,height=1024 ! appsink
SouthSource.pipeline	videotestsrc pattern=ball motion=hsweep background-color=4278255615 foreground-color=4278190080 ! video/x-raw,width=1024,height=1024 ! appsink
EastSource.pipeline	videotestsrc pattern=bar horizontal-speed=-15 background-color=4294967040 foreground-color=4278255360 ! video/x-raw,width=1024,height=1024 ! appsink
WestSource.pipeline	videotestsrc pattern=bar horizontal-speed=10 background-color=4278190335 foreground-color=4294902015 ! video/x-raw,width=1024,height=1024 ! appsink
# gstreamer makes the feeds square, here we make them 90 degrees wide and hence 90 degrees high
CeilingSource.camera-fov-angle	90
FloorSource.camera-fov-angle	90
NorthSource.camera-fov-angle	90
SouthSource.camera-fov-angle	90
EastSource.camera-fov-angle	90
WestSource.camera-fov-angle	90
# polar angle and heading specify the camera look vectors relative to global space 
CeilingSource.camera-polar-angle	0
FloorSource.camera-polar-angle	180
NorthSource.camera-heading	0
SouthSource.camera-heading	180
EastSource.camera-heading	90
WestSource.camera-heading	270




view0	Equirectangular
Equirectangular.resolution	1024x512
Equirectangular.interpolation	true
# when a view has only one rendering as in the earlier examples, we needn't name it.
# here we must since they each have their own distinct properties.
Equirectangular.rendering0	EquirectangularCeiling
Equirectangular.rendering1	EquirectangularFloor
Equirectangular.rendering2	EquirectangularNorth
Equirectangular.rendering3	EquirectangularSouth
Equirectangular.rendering4	EquirectangularEast
Equirectangular.rendering5	EquirectangularWest
EquirectangularCeiling.video	CeilingSource
EquirectangularFloor.video	FloorSource
EquirectangularNorth.video	NorthSource
EquirectangularSouth.video	SouthSource
EquirectangularEast.video	EastSource
EquirectangularWest.video	WestSource
EquirectangularCeiling.projection	org.usfirst.frc.team2077.video.projections.Equirectangular
EquirectangularFloor.projection	org.usfirst.frc.team2077.video.projections.Equirectangular
EquirectangularNorth.projection	org.usfirst.frc.team2077.video.projections.Equirectangular
EquirectangularSouth.projection	org.usfirst.frc.team2077.video.projections.Equirectangular
EquirectangularEast.projection	org.usfirst.frc.team2077.video.projections.Equirectangular
EquirectangularWest.projection	org.usfirst.frc.team2077.video.projections.Equirectangular
# global flag means each camera projection is relative to the common world system (see source notes)
# rather than the camara's own world system around its own axis.
# each source feed paints only the pixels it sees, and they all just fit together w/o overlap
EquirectangularCeiling.global	true
EquirectangularFloor.global	true
EquirectangularNorth.global	true
EquirectangularSouth.global	true
EquirectangularEast.global	true
EquirectangularWest.global	true
# these set the view axis of the final image.
# all cameras render into the same projection space, but just the pixels they have.
EquirectangularCeiling.view-heading	90
EquirectangularFloor.view-heading	90
EquirectangularNorth.view-heading	90
EquirectangularSouth.view-heading	90
EquirectangularEast.view-heading	90
EquirectangularWest.view-heading	90


# as above but a different 360 display projection
view1	Equisolid
Equisolid.resolution	1024x1024
Equisolid.interpolation	true
Equisolid.rendering0	EquisolidCeiling
Equisolid.rendering1	EquisolidFloor
Equisolid.rendering2	EquisolidNorth
Equisolid.rendering3	EquisolidSouth
Equisolid.rendering4	EquisolidEast
Equisolid.rendering5	EquisolidWest
EquisolidCeiling.video	CeilingSource
EquisolidFloor.video	FloorSource
EquisolidNorth.video	NorthSource
EquisolidSouth.video	SouthSource
EquisolidEast.video	EastSource
EquisolidWest.video	WestSource
EquisolidCeiling.projection	org.usfirst.frc.team2077.video.projections.Equisolid
EquisolidFloor.projection	org.usfirst.frc.team2077.video.projections.Equisolid
EquisolidNorth.projection	org.usfirst.frc.team2077.video.projections.Equisolid
EquisolidSouth.projection	org.usfirst.frc.team2077.video.projections.Equisolid
EquisolidEast.projection	org.usfirst.frc.team2077.video.projections.Equisolid
EquisolidWest.projection	org.usfirst.frc.team2077.video.projections.Equisolid
EquisolidCeiling.horizontal-fov	360
EquisolidFloor.horizontal-fov	360
EquisolidNorth.horizontal-fov	360
EquisolidSouth.horizontal-fov	360
EquisolidEast.horizontal-fov	360
EquisolidWest.horizontal-fov	360
EquisolidCeiling.global	true
EquisolidFloor.global	true
EquisolidNorth.global	true
EquisolidSouth.global	true
EquisolidEast.global	true
EquisolidWest.global	true
EquisolidCeiling.view-heading	90
EquisolidFloor.view-heading	90
EquisolidNorth.view-heading	90
EquisolidSouth.view-heading	90
EquisolidEast.view-heading	90
EquisolidWest.view-heading	90


# as above but a different 360 display projection
view2	CubeMap
CubeMap.resolution	1536x1024
CubeMap.interpolation	true
CubeMap.rendering0	CubeMapCeiling
CubeMap.rendering1	CubeMapFloor
CubeMap.rendering2	CubeMapNorth
CubeMap.rendering3	CubeMapSouth
CubeMap.rendering4	CubeMapEast
CubeMap.rendering5	CubeMapWest
CubeMapCeiling.video	CeilingSource
CubeMapFloor.video	FloorSource
CubeMapNorth.video	NorthSource
CubeMapSouth.video	SouthSource
CubeMapEast.video	EastSource
CubeMapWest.video	WestSource
CubeMapCeiling.projection	org.usfirst.frc.team2077.video.projections.CubeMap3x2
CubeMapFloor.projection	org.usfirst.frc.team2077.video.projections.CubeMap3x2
CubeMapNorth.projection	org.usfirst.frc.team2077.video.projections.CubeMap3x2
CubeMapSouth.projection	org.usfirst.frc.team2077.video.projections.CubeMap3x2
CubeMapEast.projection	org.usfirst.frc.team2077.video.projections.CubeMap3x2
CubeMapWest.projection	org.usfirst.frc.team2077.video.projections.CubeMap3x2
CubeMapCeiling.horizontal-fov	360
CubeMapFloor.horizontal-fov	360
CubeMapNorth.horizontal-fov	360
CubeMapSouth.horizontal-fov	360
CubeMapEast.horizontal-fov	360
CubeMapWest.horizontal-fov	360
CubeMapCeiling.global	true
CubeMapFloor.global	true
CubeMapNorth.global	true
CubeMapSouth.global	true
CubeMapEast.global	true
CubeMapWest.global	true
xCubeMapCeiling.view-heading	90
xCubeMapFloor.view-heading	90
xCubeMapNorth.view-heading	90
xCubeMapSouth.view-heading	90
xCubeMapEast.view-heading	90
xCubeMapWest.view-heading	90




# a perspective view of a small part of the 360 space.
# note that straight lines are straight, but FOV is limited
# image is tilted, need to work on view angle specification
view3	Perspective
Perspective.resolution	1024x1024
Perspective.interpolation	true
# for a limited perspective view you don't actually need all six feeds, since some won't show
# keeping all of them allows fiddling around with the view angle without worry about missing anything
Perspective.rendering0	PerspectiveCeiling
Perspective.rendering1	PerspectiveFloor
Perspective.rendering2	PerspectiveNorth
Perspective.rendering3	PerspectiveSouth
Perspective.rendering4	PerspectiveEast
Perspective.rendering5	PerspectiveWest
PerspectiveCeiling.video	CeilingSource
PerspectiveFloor.video	FloorSource
PerspectiveNorth.video	NorthSource
PerspectiveSouth.video	SouthSource
PerspectiveEast.video	EastSource
PerspectiveWest.video	WestSource
PerspectiveCeiling.projection	org.usfirst.frc.team2077.video.projections.Perspective
PerspectiveFloor.projection	org.usfirst.frc.team2077.video.projections.Perspective
PerspectiveNorth.projection	org.usfirst.frc.team2077.video.projections.Perspective
PerspectiveSouth.projection	org.usfirst.frc.team2077.video.projections.Perspective
PerspectiveEast.projection	org.usfirst.frc.team2077.video.projections.Perspective
PerspectiveWest.projection	org.usfirst.frc.team2077.video.projections.Perspective
PerspectiveCeiling.horizontal-fov	100
PerspectiveFloor.horizontal-fov	100
PerspectiveNorth.horizontal-fov	100
PerspectiveSouth.horizontal-fov	100
PerspectiveEast.horizontal-fov	100
PerspectiveWest.horizontal-fov	100
PerspectiveCeiling.global	true
PerspectiveFloor.global	true
PerspectiveNorth.global	true
PerspectiveSouth.global	true
PerspectiveEast.global	true
PerspectiveWest.global	true
# need to tweak the view vector specifications to make it easier to preserve "upness"
PerspectiveCeiling.view-polar-angle	90
PerspectiveFloor.view-polar-angle	90
PerspectiveNorth.view-polar-angle	90
PerspectiveSouth.view-polar-angle	90
PerspectiveEast.view-polar-angle	90
PerspectiveWest.view-polar-angle	90
PerspectiveCeiling.view-heading	160
PerspectiveFloor.view-heading	160
PerspectiveNorth.view-heading	160
PerspectiveSouth.view-heading	160
PerspectiveEast.view-heading	160
PerspectiveWest.view-heading	160
